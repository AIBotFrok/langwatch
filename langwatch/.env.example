# Since the ".env" file is gitignored, you can use the ".env.example" file to
# build a new ".env" file when you clone the repo. Keep this file up-to-date
# when you add new variables to `.env`.
NODE_ENV="development"
DEBUG=langwatch:*

# This file will be committed to version control, so make sure not to have any
# secrets in it. If you are cloning this repo, create a copy of this file named
# ".env" and populate it with your secrets.

# When adding additional environment variables, the schema in "/src/env.mjs"
# should be updated accordingly.

# Next Auth
# You can generate a new secret on the command line with:
# openssl rand -base64 32
# https://next-auth.js.org/configuration/options#secret
# NEXTAUTH_SECRET=""
NEXTAUTH_URL="http://localhost:3000"

# Next Auth Provider
AUTH0_CLIENT_ID=""
AUTH0_CLIENT_SECRET=""
AUTH0_ISSUER=""

# For embeddings and LLM guardrails, leave empty it if you don't want to use Azure
AZURE_OPENAI_ENDPOINT=""
AZURE_OPENAI_KEY=""
# Set OPENAI_API_KEY if you want to use OpenAI directly instead of Azure
OPENAI_API_KEY=""

API_TOKEN_JWT_SECRET="change me to a random string"

# Prisma
# https://www.prisma.io/docs/reference/database-reference/connection-urls#env
DATABASE_URL="mysql://prisma:prisma@mysql:3306/mydb"

ELASTICSEARCH_NODE_URL="http://elasticsearch:9200"
ELASTICSEARCH_API_KEY="some-random-password-which-is-greater-than-16-chars-long"

REDIS_URL="redis://redis:6379"

# For PII check
GOOGLE_CREDENTIALS_JSON=""

# For sending emails
SENDGRID_API_KEY=""

# For Azure Content Safety
CONTENT_SAFETY_ENDPOINT=""
CONTENT_SAFETY_SUBSCRIPTION_KEY=""

# The NLP service is necessary to run things like topic clustering sentiment analysis, and language detection
LANGWATCH_NLP_SERVICE=""

# LangEvals runs the evaluations and guardrails
LANGEVALS_ENDPOINT=""