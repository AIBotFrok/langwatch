import { Column, Link, Row, Section } from "@react-email/components";
import { Container } from "@react-email/container";
import { Heading } from "@react-email/heading";
import { Html } from "@react-email/html";
import { Img } from "@react-email/img";
import { render } from "@react-email/render";
import sgMail from "@sendgrid/mail";

import { env } from "../../env.mjs";

interface TriggerData {
  traceId: string;
}

export const sendTriggerEmail = async ({
  triggerEmails,
  triggerData,
  triggerName,
  projectSlug,
}: {
  triggerEmails: string[];
  triggerData: TriggerData[];
  triggerName: string;
  projectSlug: string;
}) => {
  if (!env.SENDGRID_API_KEY) {
    console.warn("No SENDGRID_API_KEY found, skipping email sending");
    return;
  }

  sgMail.setApiKey(env.SENDGRID_API_KEY);

  const emailHtml = render(
    <Html lang="en" dir="ltr">
      <Container
        style={{
          border: "1px solid #F2F4F8",
          borderRadius: "10px",
          padding: "24px",
          paddingBottom: "12px",
        }}
      >
        <Img
          src="https://app.langwatch.ai/images/logo-icon.png"
          alt="LangWatch Logo"
          width="36"
        />
        <Heading as="h1">LangWatch Trigger</Heading>
        <Heading as="h3">{triggerName}</Heading>
        <p>
          This is an automated email generated by your configured triggers.
          Below, you will find the messages that initiated this action.
        </p>

        <TriggerTable triggerData={triggerData} projectSlug={projectSlug} />

        <p>
          To stop further emails, please de-activate or delete your trigger{" "}
          <Link href={`${env.NEXTAUTH_URL}/settings/triggers`}>here</Link>
        </p>
      </Container>
    </Html>
  );

  const msg = {
    to: triggerEmails,
    from: "LangWatch <no-reply@langwatch.ai>",
    subject: `Trigger - ${triggerName} `,
    html: emailHtml,
  };

  await sgMail.send(msg);
};

const TriggerTable = ({
  triggerData,
  projectSlug,
}: {
  triggerData: TriggerData[];
  projectSlug: string;
}) => {
  return (
    <Section>
      {triggerData.slice(0, 10).map((data, index) => (
        <Row key={index}>
          <Column>
            <Link
              href={`${env.NEXTAUTH_URL}/${projectSlug}/messages/${data.traceId}`}
            >
              {data.traceId}
            </Link>
          </Column>
        </Row>
      ))}
    </Section>
  );
};
