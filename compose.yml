version: "3.8"

services:
  app:
    environment:
      - SKIP_ENV_VALIDATION=true
    env_file:
      - langwatch/.env
    build:
      context: .
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy

  langwatch_nlp:
    build:
      context: ./langwatch_nlp
    env_file:
      - langwatch/.env
    ports:
      - "8080:8080"
    restart: always

  langevals:
    image: langwatch/langevals:latest
    ports:
      - "8000:8000"
    restart: always

  postgres:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_DB: mydb
      POSTGRES_USER: prisma
      POSTGRES_PASSWORD: prisma
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U prisma"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  elasticsearch:
    image: elasticsearch:8.12.0
    environment:
      - discovery.type=single-node
      - ELASTICSEARCH_PASSWORD="some-random-password-which-is-greater-than-16-chars-long"
      - xpack.security.enabled=false
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms1024m -Xmx1024m"
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl --silent --fail localhost:9200/_cluster/health || exit 1",
        ]
      interval: 20s
      timeout: 10s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 2048m
    restart: always

volumes:
  db-data:
  redis-data:
  elasticsearch-data:
